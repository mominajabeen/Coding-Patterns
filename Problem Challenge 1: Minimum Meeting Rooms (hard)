
using namespace std;

#include <algorithm>
#include <iostream>
#include <queue>
#include <vector>

/*class Meeting {
public:
  int start = 0;
  int end = 0;

  Meeting(int start, int end) {
    this->start = start;
    this->end = end;
  }
};*/

class Solution {
public:
  struct endCompare {
    bool operator()(const Meeting &x, const Meeting &y) { return x.end > y.end; }
  };

  int findMinimumMeetingRooms(vector<Meeting> &meetings) {
    int minRooms = 0;
    if(meetings.empty())  return 0;

    sort(meetings.begin(), meetings.end(),
    [](const Meeting &x, const Meeting &y) { return x.start < y.start; });

    priority_queue<Meeting, vector<Meeting>, endCompare> minHeap;
    for(auto meeting : meetings){
      while(!minHeap.empty() && meeting.start >= minHeap.top().end){
        minHeap.pop();
      }
      minHeap.push(meeting);
      minRooms = max(minRooms, (int)minHeap.size());
    }
    // TODO: Write your code here
    return minRooms;
  }
};
