using namespace std;

#include <iostream>

/*class ListNode {
public:
  int val = 0;
  ListNode *next;

  ListNode(int value) {
    this->val = value;
    next = nullptr;
  }
};*/

class Solution {
public:
  ListNode *rotate(ListNode *head, int rotations) {
    if(head == nullptr or rotations <= 0 or head->next == nullptr)
      return head;

    // find length and last node of the list
    ListNode *lastNode = head;
    int length = 1;
    while(lastNode->next != nullptr){
      lastNode = lastNode->next;
      length++;
    }
    lastNode->next = head;
    rotations %= length;
    int skipLength = length - rotations;
    ListNode *lastNodeOfRotatedList = head;
    for(int i = 0; i < skipLength - 1; i++){
      lastNodeOfRotatedList = lastNodeOfRotatedList->next;
    }
    head = lastNodeOfRotatedList->next;
    lastNodeOfRotatedList->next = nullptr;
  
    return head;
  }
};
